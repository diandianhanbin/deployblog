(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{421:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/1537976533363888.jpg",alt:"IMG_0039"}})]),s._v(" "),a("p",[s._v("近日武汉遭受特大洪水，仿佛又见98年特大洪灾，每次出现天灾，总是一方有难八方支援。为武汉祈福。")]),s._v(" "),a("p",[s._v("次次灾情都有伟大的人民子弟兵站在第一线，向他们致敬。")]),s._v(" "),a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("最近在看"),a("code",[s._v("Git")]),s._v("，那么看了之后就需要用"),a("code",[s._v("Git")]),s._v("来解决一些工作中遇到的问题，学了不能用在工作中，等于白学。")]),s._v(" "),a("p",[s._v("这次遇到的问题是打包升级的问题，我们公司目前还处于最原始的手工打更新包的状况，每次打包都要找开发要更新的内容，非常非常的麻烦，于是我就想用学习的"),a("code",[s._v("Git")]),s._v("来解决这个问题。")]),s._v(" "),a("h2",{attrs:{id:"目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[s._v("#")]),s._v(" 目的")]),s._v(" "),a("p",[s._v("我们的环境有两个，一个是开发环境、另一个是测试环境，那么我希望每次在开发环境都能自动把一个周期内开发改动的内容自动打包出来。我只要"),a("code",[s._v("down")]),s._v("下来用"),a("code",[s._v("ftp")]),s._v("上传到测试环境就行了。")]),s._v(" "),a("h2",{attrs:{id:"开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[s._v("#")]),s._v(" 开始")]),s._v(" "),a("p",[s._v("当然，两个环境都需要装上"),a("code",[s._v("Git")]),s._v("。装完之后我需要让两个环境的数据同步。所以要先手工处理一次，然后在两个环境打上相同的"),a("code",[s._v("Tag")]),s._v("。以后，不管开发提交了几次改动，我只要和我上次使用的"),a("code",[s._v("Tag")]),s._v("做比对，就能知道开发做了哪些改动")]),s._v(" "),a("h2",{attrs:{id:"自动打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动打包"}},[s._v("#")]),s._v(" 自动打包")]),s._v(" "),a("p",[s._v("自动打包有两个工作要做，第一步要把改动的文件抓出来，第二步要把他们打包。")]),s._v(" "),a("ul",[a("li",[s._v("抓出改动的文件")])]),s._v(" "),a("p",[s._v("我使用的是diff命令，"),a("code",[s._v("Git")]),s._v("中自带了这个功能。")]),s._v(" "),a("p",[a("code",[s._v("git diff <原来的版本> <现在的版本> --only-name")])]),s._v(" "),a("p",[s._v("这条命令就能抓出两个版本中不同的内容。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("README.MD\nTestTools/mobile/adb.py\nTestTools/mobile/adbconfig.py\nTestTools/urls.py\nTestTools/views.py\nstatic/bootstrap/bootstrap.min.css\nstatic/img/bodyBg.jpg\nstatic/img/bodyBg2.jpg\nstatic/img/bodyBg3.jpg\nstatic/img/test1.jpg\nstatic/img/test2.jpg\nstatic/js/androidbaseinfo.js\nstatic/js/bootstrap.min.js\nstatic/js/bug.js\nstatic/js/commonfunction.js\nstatic/js/jquery-3.0.0.min.js\ntemplates/TestTools/base.html\ntemplates/TestTools/mobileTest/baseinfo.html\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("比如某次我的工具箱的改动就是这些。")]),s._v(" "),a("ul",[a("li",[s._v("自动打包")])]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("Linux")]),s._v("中，打包的命令是"),a("code",[s._v("tar")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("tar -cvf + <文件名> + <打包的文件名>")]),s._v("就可以把文件打包出来了，那么，我们第一步的操作，不就是把改动的文件名输出出来么？")]),s._v(" "),a("ul",[a("li",[s._v("通过管道符连接两个句子")])]),s._v(" "),a("p",[a("code",[s._v("Linux")]),s._v("中神奇的管道符可谓功能多多。完整的句子如下：")]),s._v(" "),a("p",[a("code",[s._v("git diff fff3e56 0685a03 --name-only | xargs tar -cvf update.tar")])]),s._v(" "),a("p",[s._v("这样当前目录就会多出一个update.tar的压缩包。解压缩出来就是这次改动的更新包了。")]),s._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[s._v("#")]),s._v(" 最后")]),s._v(" "),a("p",[s._v("我们的环境是"),a("code",[s._v("Windows")]),s._v("的，所以还要研究一下怎么去跑自动化。如果是"),a("code",[s._v("Linux")]),s._v("的，那就非常简单了，写一个"),a("code",[s._v("shell")]),s._v("脚本就能很轻松的实现自动化更新了。")])])}),[],!1,null,null,null);t.default=n.exports}}]);