(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{366:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("p",[t._v("最近在写web端的时候经常会遇到一个问题，查询数据的时候需要组合条件来查询，并且需要对结果做分页，在网上找了好久，都是到处“借鉴”，无奈之下只能自己研究，这里吧研究的结果记录下来")]),t._v(" "),a("h2",{attrs:{id:"拼sql来做组合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼sql来做组合查询"}},[t._v("#")]),t._v(" 拼SQL来做组合查询")]),t._v(" "),a("p",[t._v("拼SQL是一个最基本的方式，总体的执行难度也不大，不过容易引起SQL注入。但是拼的方式有点讲究，不同的拼法对后续的影响也是不一样的。")]),t._v(" "),a("ul",[a("li",[t._v("用"),a("code",[t._v("Python")]),t._v("的语法进行格式化")])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Python")]),t._v("中，字符串格式化最方便的就是通过"),a("code",[t._v("format()")]),t._v("方法来进行字符串的替换，比如需要拼一句"),a("code",[t._v("SQL")]),t._v("可以用下列的方式：")]),t._v(" "),a("p",[a("code",[t._v('"select * from photo_info where {0} {1}".format("a=1", " and b=2")')])]),t._v(" "),a("p",[t._v("这种方式应该说是最原始的方式了，比较容易引起"),a("code",[t._v("SQL")]),t._v("注入。而且查询条件复杂之后，整个句式看起来会有点不舒服。")]),t._v(" "),a("p",[t._v("目前主流的方式操作数据库都是使用"),a("code",[t._v("ORM")]),t._v("的框架来处理，比如"),a("code",[t._v("SQLAlchemy")]),t._v("这种。")]),t._v(" "),a("h2",{attrs:{id:"使用sqlalchemy来做组合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用sqlalchemy来做组合查询"}},[t._v("#")]),t._v(" 使用SQLAlchemy来做组合查询")]),t._v(" "),a("p",[t._v("首先必须说明，"),a("code",[t._v("SQLAlchemy")]),t._v("是不支持组合查询时动态删除元素的，举个例子，比如你有四个查询条件，如果其中一个字段的值为空，那么这个空的值依然会按照空去做"),a("code",[t._v("SQL")]),t._v("查询，而不会删了这个字段，用剩下的3个字段去查询。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('ORM：\nphotoinfo.filter(PhotoDB.PhotoInfo.category == category)\n.filter(PhotoDB.PhotoInfo.is_banner == is_banner)\n.filter(PhotoDB.PhotoInfo.photo_desc.like("%{0}%".format(photo_desc))).filter(PhotoDB\n.PhotoInfo.photo_title.like("%{0}%".format(photo_title))).all()\n\nSQL：\nselect * from photo_info where category = "category" and is_banner = "is_banner" and photo_desc = "photo_desc" and photo_title = "photo_title"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("上面的示例，必须要4个字段有值，如果其中一个没有值，"),a("code",[t._v("SQL")]),t._v("就会变成这样：\n"),a("code",[t._v('select * from photo_info where category = "" and is_banner = "is_banner" and photo_desc = "photo_desc" and photo_title = "photo_title"')]),t._v("\n与我要的结果不一样，我想要的是这样：\n"),a("code",[t._v('select * from photo_info where is_banner = "is_banner" and photo_desc = "photo_desc" and photo_title = "photo_title"')])]),t._v(" "),a("p",[a("code",[t._v("SQLAlchemy")]),t._v("还是有一个比较优雅的实现方式，有点类似拼"),a("code",[t._v("SQL")]),t._v("，但是整体看起来逻辑很清晰。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\tphotoinfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" photoinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PhotoDB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PhotoInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" is_banner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\tphotoinfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" photoinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PhotoDB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PhotoInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_banner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" is_banner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" photo_desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\tphotoinfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" photoinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PhotoDB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PhotoInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("photo_desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("like"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{0}%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("photo_desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" photo_title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\tphotoinfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" photoinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PhotoDB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PhotoInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("photo_title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("like"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{0}%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("photo_title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tphotos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" photoinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("这样看起来就很清晰，能够实现我想要的效果，并且"),a("code",[t._v("SQLAlchemy")]),t._v("对"),a("code",[t._v("SQL")]),t._v("注入做了保护措施，不会引发安全问题。")]),t._v(" "),a("h2",{attrs:{id:"分页查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),a("p",[t._v("分页查询的逻辑很简单，用"),a("code",[t._v("SQLAlchemy")]),t._v("实现起来也非常简单。")]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("code",[t._v("pagenate")])])]),t._v(" "),a("p",[t._v("如果要使用"),a("code",[t._v("pagenate")]),t._v("来处理分页，那么查询的方式必须继承与"),a("code",[t._v("BaseQuery")]),t._v("，否则会报错找不到此方法，使用方式接上例如下所示：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("photos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" photoinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pagination"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("那么，只要迭代"),a("code",[t._v("photos")]),t._v("变量的"),a("code",[t._v("items")]),t._v("即"),a("code",[t._v("photos.items")]),t._v("即可获得查询结果")]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("code",[t._v("offset()")]),t._v("和"),a("code",[t._v("limit()")]),t._v(" "),a("code",[t._v("offset")]),t._v("是查询的偏移量，而"),a("code",[t._v("limit")]),t._v("限制了返回的条数，接上例实现方式如下：\n"),a("code",[t._v("photos = photoinfo.limit(PAGESIZE).offset((int(current_page) - 1) * PAGESIZE)")])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("组合条件查询和分页都有多种实现方式，我们应该选择看起来逻辑清晰并且安全的方式来编码，这样对日后的维护会非常友好")])])}),[],!1,null,null,null);s.default=e.exports}}]);