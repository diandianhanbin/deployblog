(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{368:function(s,t,n){"use strict";n.r(t);var e=n(0),a=Object(e.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),n("p",[s._v("了解"),n("code",[s._v("HTTP")]),s._v("一直是从各种渠道来了解，但是一直都没有真正的从它实际的样子来了解这个协议，这次借着写"),n("code",[s._v("Mock")]),s._v("的机会，从"),n("code",[s._v("TCP")]),s._v("的层面来理解一下它。")]),s._v(" "),n("h2",{attrs:{id:"初步窥视"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初步窥视"}},[s._v("#")]),s._v(" 初步窥视")]),s._v(" "),n("p",[s._v("首先用"),n("code",[s._v("Python")]),s._v("写一个基本的"),n("code",[s._v("TCP Server")]),s._v("，然后用浏览器打开这个地址，收到的数据不直接"),n("code",[s._v("print")]),s._v(",而是用"),n("code",[s._v("print repr()")]),s._v("打印出来，类似这样:"),n("code",[s._v("print repr(recv)")]),s._v("。这样就能看到它原来的样子。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("''GET /test/sven?testname=sven HTTP/1.1\\r\\nHost: localhost:31500\\r\\nConnection: keep-alive\\r\\nUpgrade-Insecure-Requests: 1\\r\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\\r\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\\r\\nAccept-Encoding: gzip, deflate, br\\r\\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8,vi;q=0.7\\r\\nCookie: token=eyJ2ZXIiOiJ2MiIsInVpZCI6Ijdh'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("可以看到，它的所有信息，都是用"),n("code",[s._v("\\r\\n")]),s._v("来分割的。那么问题来了，为什么是"),n("code",[s._v("\\r\\n")]),s._v("？")]),s._v(" "),n("blockquote",[n("p",[s._v("在计算机还没有出现之前，有一种叫做电传打字机（Teletype Model 33）的玩意，每秒钟可以打10个字符。但是它有一个问题，就是打完一行换行的时候，要用去0.2秒，正好可以打两个字符。要是在这0.2秒里面，又有新的字符传过来，那么这个字符将丢失。\n于是，研制人员想了个办法解决这个问题，就是在每行后面加两个表示结束的字符。一个叫做“回车”，告诉打字机把打印头定位在左边界；另一个叫做“换行”，告诉打字机把纸向下移一行。\n这就是“换行”和“回车”的来历，从它们的英语名字上也可以看出一二。\n后来，计算机发明了，这两个概念也就被般到了计算机上。那时，存储器很贵，一些科学家认为在每行结尾加两个字符太浪费了，加一个就可以。于是，就出现了分歧。\nUnix系统里，每行结尾只有“<换行>”，即“\\n”；\nWindows系统里面，每行结尾是“<换行><回车>”，即“\\n\\r”；\nMac系统里，每行结尾是“\\r”。")])]),s._v(" "),n("p",[s._v("通俗的来说，就是一个用作换行的东西。头部的数据全部按照这种格式来组成一个长字符串。")]),s._v(" "),n("h2",{attrs:{id:"头部信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#头部信息"}},[s._v("#")]),s._v(" 头部信息")]),s._v(" "),n("p",[s._v("由于"),n("code",[s._v("GET")]),s._v("请求没有数据，因此上面的请求信息其实就是"),n("code",[s._v("HTTP")]),s._v("的头部信息。")]),s._v(" "),n("p",[s._v("第一行是一个特殊的信息，标记着这个请求的关键信息，包括"),n("code",[s._v("请求方法")]),s._v("、"),n("code",[s._v("URL")]),s._v("和"),n("code",[s._v("参数")]),s._v("、"),n("code",[s._v("请求的协议和版本号")]),s._v("，这些关键信息用空格分割。")]),s._v(" "),n("p",[s._v("剩下的行就是请求头部的信息，这些头部字段可以在"),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc4229",target:"_blank",rel:"noopener noreferrer"}},[s._v("RFC4229"),n("OutboundLink")],1),s._v("上查看到国际通用的规范定义。")]),s._v(" "),n("h2",{attrs:{id:"get"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[s._v("#")]),s._v(" GET")]),s._v(" "),n("p",[n("code",[s._v("GET")]),s._v("方法是"),n("code",[s._v("HTTP")]),s._v("中比较常见的方法，我们日常访问某个网站，使用的就是get方法。")]),s._v(" "),n("p",[s._v("如上一节示的"),n("code",[s._v("GET")]),s._v("请求，服务端拿到的其实是"),n("code",[s._v("HTTP")]),s._v("的首部信息，"),n("code",[s._v("GET")]),s._v("请求并没有请求的数据，所以使用"),n("code",[s._v("GET")]),s._v("方式请求，如果需要携带参数，那么只能放在"),n("code",[s._v("URL")]),s._v("中，因此我们可以从这里看出，"),n("code",[s._v("GET")]),s._v("和"),n("code",[s._v("POST")]),s._v("的一个很明显的区别，就是当需要携带数据的时候，"),n("code",[s._v("GET")]),s._v("方法只能把数据放在"),n("code",[s._v("URL")]),s._v("上，而"),n("code",[s._v("POST")]),s._v("可以放在请求数据中.")]),s._v(" "),n("h2",{attrs:{id:"post"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[s._v("#")]),s._v(" POST")]),s._v(" "),n("p",[s._v("用同样的方法来跑一次"),n("code",[s._v("POST")]),s._v("请求，可以看到如下数据：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("'POST /?name=sven HTTP/1.1\\r\\nHost: 127.0.0.1:31500\\r\\nConnection: keep-alive\\r\\nAccept-Encoding: gzip, deflate\\r\\nAccept: */*\\r\\nUser-Agent: python-requests/2.19.1\\r\\nContent-Length: 3\\r\\nContent-Type: application/x-www-form-urlencoded\\r\\n\\r\\na=1'\n\nPOST /?name=sven HTTP/1.1\nHost: 127.0.0.1:31500\nConnection: keep-alive\nAccept-Encoding: gzip, deflate\nAccept: */*\nUser-Agent: python-requests/2.19.1\nContent-Length: 3\nContent-Type: application/x-www-form-urlencoded\n\na=1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("可以看到，请求头部和请求数据中，使用了两个"),n("code",[s._v("\\r\\n")]),s._v("，也就是换两行来做分割。")]),s._v(" "),n("p",[s._v("同样的，如果在"),n("code",[s._v("URL")]),s._v("携带参数，"),n("code",[s._v("POST")]),s._v("方法也是能发往服务器的，不过"),n("code",[s._v("POST")]),s._v("方法可以支持数据层携带数据，我们常说的"),n("code",[s._v("POST")]),s._v("方法传递数据，比"),n("code",[s._v("GET")]),s._v("方法安全，实际上从"),n("code",[s._v("TCP")]),s._v("层来看，并没有什么区别，只是解析的时候，获取的地方不一样而已。")]),s._v(" "),n("p",[s._v("另一方面，从前端传递数据到后端，有"),n("code",[s._v("表单")]),s._v("传递和"),n("code",[s._v("JSON")]),s._v("数据传递这两种模式。上面获取的数据实际上是通过表单传递而得到的数据。通过"),n("code",[s._v("JSON")]),s._v("传递的数据格式如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('POST /?name=sven HTTP/1.1\nHost: 127.0.0.1:31500\nConnection: keep-alive\nAccept-Encoding: gzip, deflate\nAccept: */*\nUser-Agent: python-requests/2.19.1\nContent-Length: 8\nContent-Type: application/json\n\n{"a": 1}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("可以看到数据格式是有一些不同的。")]),s._v(" "),n("h2",{attrs:{id:"flask的某些处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flask的某些处理"}},[s._v("#")]),s._v(" Flask的某些处理")]),s._v(" "),n("p",[s._v("研究这些数据，其实是有一个好奇点，"),n("code",[s._v("Flask")]),s._v("在拿请求参数的时候，使用的方法都是"),n("code",[s._v('request.values.get("xxx")')]),s._v("，那么他是怎么去处理这些数据的呢？观看源码即可得到答案。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""A :class:`werkzeug.datastructures.CombinedMultiDict` that combines\n        :attr:`args` and :attr:`form`."""')]),s._v("\n        args "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" d "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("form"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MultiDict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                d "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MultiDict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" CombinedMultiDict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这里可以看到，返回的是一个"),n("code",[s._v("CombinedMultiDict")]),s._v("对象处理后的"),n("code",[s._v("args")]),s._v("的对象，这个对象的"),n("code",[s._v("get")]),s._v("方法实际上就是我们调用的方法。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" default"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" d "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dicts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("except")]),s._v(" ValueError"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" default\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("这里可以看到，我们调用的时候它回去这个列表的每个字典里面去尝试拿值，拿到就返回值，拿不到就把默认结果返回回去。这个字典的数据是"),n("code",[s._v("self.args, self.form")]),s._v("，这两个数据实际上一个是解析了"),n("code",[s._v("url")]),s._v("中的参数，和"),n("code",[s._v("form")]),s._v("里面的参数，统一放到这个列表里面去的。所以如果只是要拿表单的数据，可以直接调用"),n("code",[s._v("request.form.get()")]),s._v("也是一样的。")])])}),[],!1,null,null,null);t.default=a.exports}}]);