(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{417:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/1537777844356856.jpg",alt:"20160825"}})]),t._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("p",[t._v("上一篇文章"),s("a",{attrs:{href:"http://wybblog.applinzi.com/blog/article/76/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Appium与React Native》"),s("OutboundLink")],1),t._v("的最后猜测到：")]),t._v(" "),s("blockquote",[s("p",[t._v("IOS暂未上手，但是应该与Android是一样的，封装原生的UI层，JS通过API与原生交互。")])]),t._v(" "),s("p",[t._v("刚好又从开发手中拿到了IOS的端，于是对这个工程做一些拆解，论证论证我的猜测。")]),t._v(" "),s("h2",{attrs:{id:"运行app"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行app"}},[t._v("#")]),t._v(" 运行APP")]),t._v(" "),s("p",[t._v("直接构建工程，可以看到启动了一个服务。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/1537777865465415.jpg",alt:"20160825210940"}})]),t._v(" "),s("p",[t._v("服务占用了8081端口，启动模拟器，在这之后会进入欢迎页面，在欢迎页面的同时，会出现如下界面")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/1537777888927545.jpg",alt:"20160825211142"}})]),t._v(" "),s("p",[t._v("很明显，是在做一个转换，等这个转换结束之后，就进入了APP的首页。整个过程结合终端和模拟器看，会显得非常直观。")]),t._v(" "),s("h2",{attrs:{id:"分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),s("p",[t._v("直接来看"),s("code",[t._v("AppDelegate.m")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('NSURL *jsCodeLocation;\n\n  /**\n   * Loading JavaScript code - uncomment the one you want.\n   *\n   * OPTION 1\n   * Load from development server. Start the server from the repository root:\n   *\n   * $ npm start\n   *\n   * To run on device, change `localhost` to the IP address of your computer\n   * (you can get this by typing `ifconfig` into the terminal and selecting the\n   * `inet` value under `en0:`) and make sure your computer and iOS device are\n   * on the same Wi-Fi network.\n   */\n\n  jsCodeLocation = [NSURL URLWithString:@"http://localhost:8081/index.ios.bundle?platform=ios&dev=true"];\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("一开始就起了一个8081端口的服务，这个和我们构建的时候看到终端占用的端口是一致的。然后是初始化根视图，控制器等APP的重要组件。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                      moduleName:@"douban"\n                                               initialProperties:nil\n                                                   launchOptions:launchOptions];\n  rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];\n\n  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];\n  UIViewController *rootViewController = [UIViewController new];\n  rootViewController.view = rootView;\n  self.window.rootViewController = rootViewController;\n  [self.window makeKeyAndVisible];\n  return YES;\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("之后转换JS的代码来驱动原生的控件。转换完成后，首页就展示出来了。")]),t._v(" "),s("p",[t._v("工程中有一个库，这个库封装了React Native的内容。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/1537777910084084.jpg",alt:"20160825212207"}})]),t._v(" "),s("p",[t._v("打开源代码看看，其实就是ReactNative封装了原生的代码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/1537777939707819.jpg",alt:"20160825212527"}})]),t._v(" "),s("p",[t._v("界面还是原生的，ReactNative做了封装后，提供API提供调用。")]),t._v(" "),s("h2",{attrs:{id:"控件视图查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控件视图查看"}},[t._v("#")]),t._v(" 控件视图查看")]),t._v(" "),s("p",[t._v("我们打开3D视图来查看控件的情况。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-img-1251534856.cos.ap-guangzhou.myqcloud.com/15377779623640242.jpg",alt:"20160825212950"}})]),t._v(" "),s("p",[t._v("可以看到控件都是RCT开头的，也就是我们刚刚从工程中库文件发现封装原生内容的工程生成的自定义控件，它们都继承于原生的控件。")]),t._v(" "),s("h2",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),s("p",[t._v("所以可以断定，我原来的猜测是正确的，IOS的ReactNative也是对原生控件做封装，然后再对外部提供API供调用。")]),t._v(" "),s("p",[t._v("所以还是那句话。")]),t._v(" "),s("blockquote",[s("p",[t._v("从结果上来看，无疑是挺好的，现在的混血APP虽然对于开发来说，是一个很好的解决客户端更新的方案，但是使用Appium测起来，要多一个切换会话的过程，虽然不复杂，但是总感觉有点麻烦，反正Appium是基于UI层的测试，那么用ReactNative弄出来的APP在UI层上全都是原生，那么对使用Appium并没有什么影响，反而省了切H5的过程呢。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);