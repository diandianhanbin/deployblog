(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{347:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("作为一名测试人员，自动化测试框架可能是我们日常工作中使用的最多的东西了，以我为例，日常工作中天天打交道的框架就是"),a("code",[s._v("unittest")]),s._v("，深入理解"),a("code",[s._v("unittest")]),s._v("测试框架的原理，再工作中能避免我们踩到某些大坑。")]),s._v(" "),a("h2",{attrs:{id:"启动方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动方式"}},[s._v("#")]),s._v(" 启动方式")]),s._v(" "),a("p",[a("code",[s._v("unittest")]),s._v("的启动方式有两种")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("python -m unittest xxx.xxx")])]),s._v(" "),a("li",[a("code",[s._v("unittest.main()")])])]),s._v(" "),a("p",[s._v("第一种方式是以命令行的方式，也是我们正常执行用例和调试的时候使用的命令。\n第二种方式是代码中编排执行测试用例的时候常用的方法。")]),s._v(" "),a("h2",{attrs:{id:"命令行方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行方式"}},[s._v("#")]),s._v(" 命令行方式")]),s._v(" "),a("p",[s._v("使用命令行方式，首先得了解，这个"),a("code",[s._v("-m")]),s._v(" 参数的作用。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.python.org/2/using/cmdline.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("说明了这个参数是按照模块化的方式执行。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-m <module-name>\nSearch sys.path for the named module and execute its contents as the __main__ module.\nSince the argument is a module name, you must not give a file extension (.py). The module-name should be a valid Python module name, but the implementation may not always enforce this (e.g. it may allow you to use a name that includes a hyphen).\nPackage names are also permitted. When a package name is supplied instead of a normal module, the interpreter will execute <pkg>.__main__ as the main module. This behaviour is deliberately similar to the handling of directories and zipfiles that are passed to the interpreter as the script argument.\nNote This option cannot be used with built-in modules and extension modules written in C, since they do not have Python module files. However, it can still be used for precompiled modules, even if the original source file is not available.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("从这里能看到几个关键点。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("-m")]),s._v("执行对象是一个包，而不是一个"),a("code",[s._v(".py")]),s._v("文件。")]),s._v(" "),a("li",[s._v("使用"),a("code",[s._v("-m")]),s._v("的方式执行之后，"),a("code",[s._v("python")]),s._v("会把当前路径加到"),a("code",[s._v("sys.path")]),s._v("中。")]),s._v(" "),a("li",[s._v("无法这样执行内建模块")])]),s._v(" "),a("p",[s._v("一点一点来分析。")]),s._v(" "),a("h3",{attrs:{id:"第一点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一点"}},[s._v("#")]),s._v(" 第一点")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("-m")]),s._v("执行对象是一个包，而不是一个"),a("code",[s._v(".py")]),s._v("文件。")])]),s._v(" "),a("p",[s._v("准确的说，"),a("code",[s._v("-m")]),s._v("执行的是这个包的"),a("code",[s._v("__main__.py")]),s._v(" 文件。")]),s._v(" "),a("p",[s._v("例如，新建一个文件夹叫"),a("code",[s._v("testmodule")]),s._v("，在文件夹中创建"),a("code",[s._v("__init__.py")]),s._v(", "),a("code",[s._v("__main__.py")]),s._v("两个文件，在"),a("code",[s._v("__main__.py")]),s._v("中添加如下代码.")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后在文件夹上层执行："),a("code",[s._v("python -m testmodule")]),s._v("，此时输出的内容是：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ python -m testmodule\ntest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("所以命令行执行"),a("code",[s._v("python -m unittest")]),s._v("的时候，实际上是执行"),a("code",[s._v("unittest")]),s._v("包下的"),a("code",[s._v("__main__.py")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unittest中的源代码")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endswith"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__main__.py"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"python -m unittest"')]),s._v("\n\n__unittest "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("main "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TestProgram"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" USAGE_AS_MAIN\nTestProgram"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("USAGE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" USAGE_AS_MAIN\n\nmain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("module"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("从这类可以看出来，调用"),a("code",[s._v("__main__.py")]),s._v("的时候，拿到的是"),a("code",[s._v("TestProgram")]),s._v("。从"),a("code",[s._v("main")]),s._v("中引入的"),a("code",[s._v("main")]),s._v("，其赋值对象是"),a("code",[s._v("main = TestProgram")]),s._v("，也就是说，从命令行来运行"),a("code",[s._v("unittest")]),s._v("框架，最终运行的类，是"),a("code",[s._v("TestProgram")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"第二点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二点"}},[s._v("#")]),s._v(" 第二点")]),s._v(" "),a("blockquote",[a("p",[s._v("使用"),a("code",[s._v("-m")]),s._v("的方式执行之后，"),a("code",[s._v("python")]),s._v("会把当前路径加到"),a("code",[s._v("sys.path")]),s._v("中")])]),s._v(" "),a("p",[s._v("这点其实非常关键，在测试过程中，经常遇到的问题就是在"),a("code",[s._v("pycharm")]),s._v("运行的好好的，但是用命令行执行的时候就经常报错包不存在。")]),s._v(" "),a("p",[s._v("例如这样的结构：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".\n|____testmodel\n| |______init__.py\n| |______main__.py\n|____util\n| |______init__.py\n| |____sum.py\n|______init__.py\n|____case\n| |______init__.py\n| |____test.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("在"),a("code",[s._v("case")]),s._v("中的"),a("code",[s._v("test.py")]),s._v("中引用了"),a("code",[s._v("util")]),s._v("下面的"),a("code",[s._v("sum")]),s._v("方法。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" util "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sum")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在根目录下执行就能正常运行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ python -m unittest case.test.TestDemo.test_sum\n.\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("但是在case目录下执行就会报错找不到包。")]),s._v(" "),a("p",[s._v("我们把"),a("code",[s._v("sys.path")]),s._v("打出来就能看到。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("['', '/Library/Python/2.7/site-packages/six-1.12.0-py2.7.egg', '/Library/Python/2.7/site-packages/basedeal-0.0.2-py2.7.egg', '/Library/Python/2.7/site-packages', '/Library/Python/2.7/site-packages/M2Crypto-0.35.2-py2.7-macosx-10.14-intel.egg', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages', '/Library/Python/2.7/site-packages', '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python', '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC']\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中的第一个"),a("code",[s._v('""')]),s._v(" 就是命令所在的目录。如果直接执行"),a("code",[s._v("python xxx.py")]),s._v("则会将这个文件的路径添加到"),a("code",[s._v("sys.path")]),s._v("中，这个细微的区别不注意，就会导致经常出现"),a("code",[s._v("python")]),s._v("执行的时候经常找不到包。")]),s._v(" "),a("h2",{attrs:{id:"函数方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数方式"}},[s._v("#")]),s._v(" 函数方式")]),s._v(" "),a("p",[s._v("函数的方式启动时，运行代码是这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n\nsomething"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("balabala\n\nunittest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("运行的方法是"),a("code",[s._v("unittest")]),s._v("中的"),a("code",[s._v("main")]),s._v("方法，跟踪代码可以发现，"),a("code",[s._v("main()")]),s._v("方法对应的依然是"),a("code",[s._v("TestProgram")]),s._v("。这样就找到了整个测试框架的起点。")]),s._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),a("p",[s._v("可以看到，"),a("code",[s._v("unittest")]),s._v("不同的启动方式，最终走到的地方是一样的，下一篇，从"),a("code",[s._v("TestProgram")]),s._v("开始继续往下看。")])])}),[],!1,null,null,null);t.default=n.exports}}]);