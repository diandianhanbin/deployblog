(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{425:function(t,_,v){"use strict";v.r(_);var e=v(0),a=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"背景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),v("p",[t._v("今年给自己定下的基调就是要好好学一下数据库相关的知识，所以今天也开始弃用各类"),v("code",[t._v("ORM")]),t._v("框架，使用原生的"),v("code",[t._v("sql")]),t._v("来干一些活。这次遇到的问题就是一个去重查询的问题。")]),t._v(" "),v("h2",{attrs:{id:"过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),v("p",[t._v("去重查询，我第一个想到的就是"),v("code",[t._v("group by")]),t._v("。这个方法是可以去重的。")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("SELECT count(tag_id) FROM xx.xx GROUP BY tag_id;\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("结果看到的数据是每一个不同的"),v("code",[t._v("tag_id")]),t._v("的计数。类似下面这样的数据:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("count(tag_id)")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")])]),t._v(" "),v("tr",[v("td",[t._v("1")])]),t._v(" "),v("tr",[v("td",[t._v("1")])]),t._v(" "),v("tr",[v("td",[t._v("1")])]),t._v(" "),v("tr",[v("td",[t._v("4")])]),t._v(" "),v("tr",[v("td",[t._v("1")])]),t._v(" "),v("tr",[v("td",[t._v("6")])])])]),t._v(" "),v("p",[t._v("这样的数据显然不是我需要的，我要的数据是统计不同类型的"),v("code",[t._v("tag_id")]),t._v("有多少个，而不是每种"),v("code",[t._v("tag_id")]),t._v("有多少条记录。")]),t._v(" "),v("p",[t._v("经过搜索发现，"),v("code",[t._v("distinct")]),t._v("能满足我的要求。上面的"),v("code",[t._v("sql")]),t._v("改为：")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("SELECT count(distinct tag_id) FROM xx.xx GROUP BY tag_id;\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("这样的查询结果就是我想要的。")]),t._v(" "),v("h2",{attrs:{id:"后续"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#后续"}},[t._v("#")]),t._v(" 后续")]),t._v(" "),v("p",[t._v("问题虽然是解决了，但是抱着学习的心态，看了一下"),v("code",[t._v("distinct")]),t._v("相关的内容。")]),t._v(" "),v("p",[v("code",[t._v("distinct")]),t._v("翻译过来就是  "),v("code",[t._v("不同的")]),t._v("  类似的意思。")]),t._v(" "),v("p",[t._v("我是把它跟聚合函数"),v("code",[t._v("count")]),t._v("放在一起使用了，如果单独使用，其实就是去重的结果。")]),t._v(" "),v("p",[t._v("如果不使用"),v("code",[t._v("count")]),t._v("来统计总数，直接使用"),v("code",[t._v("distinct")]),t._v("，这个结果与"),v("code",[t._v("group by")]),t._v("都是去重的记录。区别就是排序不一样。"),v("code",[t._v("group by")]),t._v("会执行排序，而"),v("code",[t._v("distinct")]),t._v("不会执行排序。")]),t._v(" "),v("p",[t._v("如果查询的结果带上"),v("code",[t._v("limit")]),t._v("子句的话，"),v("code",[t._v("distinct")]),t._v("与"),v("code",[t._v("group by")]),t._v("都会返回对应的limit数量，不过"),v("code",[t._v("group by")]),t._v("的结果也是排序后的结果。")]),t._v(" "),v("h2",{attrs:{id:"性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),v("p",[v("code",[t._v("distinct")]),t._v("与"),v("code",[t._v("group by")]),t._v("功能类似。我查了一下资料。")]),t._v(" "),v("blockquote",[v("p",[t._v("**DISTINCT：**这种方式会将全部内容存储在一个hash结构里，最后通过计算hash结构中key的个数即可得到结果，典型的以空间换取时间的方式。\n**GROUP BY：**这种方式是先将字段排序（一般使用sort），然后进行计数，典型的以时间换取空间。")])]),t._v(" "),v("p",[t._v("根据这个说法，数据离散程度越大，用"),v("code",[t._v("group by")]),t._v("的方式就更高效，反之则是"),v("code",[t._v("distinct")]),t._v("更高效。")])])}),[],!1,null,null,null);_.default=a.exports}}]);